/* METABIND spell slots */

@property --bg-1 {
    syntax: '<color>';
    inherits: false;
    initial-value: white;
}
  
@property --bg-2 {
  syntax: '<color>';
  inherits: false;
  initial-value: white;
}
  
@property --bg-3 {
  syntax: '<color>';
  inherits: false;
  initial-value: white;
}

.mb-input-wrapper.wound .checkbox-container::after {
  display: none;
}

.mb-input-wrapper.wound .checkbox-container {
  height: 2em;
  width: 2em;
  line-height: 2em;
  border-radius: 20%;
  border: 1px solid hsl(var(--accent-h), var(--accent-s), var(--accent-l));
  transition: none;
  transform: rotate(0deg);
  transition: border-radius 0.5s ease-out, --bg-1 2s, --bg-2 1s, --bg-3 5s;

  --bg-1: rgba(0,0,0,0.2);
  --bg-2: rgba(0,0,0,0.1);
  --bg-3: rgba(0,0,0,0);
  background: linear-gradient(65deg, var(--bg-1) 1%, var(--bg-2) 20%, var(--bg-3) 100%);
}
.mb-input-wrapper.wound .checkbox-container.is-enabled {
  border-radius: 50%;

  --bg-1: rgba(185,28,130,1);
  --bg-2: rgba(173,37,169,1);
  --bg-3: rgba(0,106,255,1);
}

.mb-input-wrapper.wound .checkbox-container::before {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0;
  right: 0;

  opacity: 0;
  content: "ðŸ©¹";
  font-size: 1em;
  color: white;

  margin: 0;
  padding: 0;
  transition: opacity 1s ease-in, transform 1s;
  transform: scale(300%) rotate(20deg);
  pointer-events: none;
}

.mb-input-wrapper.wound .checkbox-container.is-enabled::before {
  opacity: 1;
  transform: scale(100%);
  transition: transform 0s;
}